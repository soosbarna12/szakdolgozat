<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="4/16/2025 10:20:31 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DESKTOP-QM8DV7B"
  DTS:CreatorName="DESKTOP-QM8DV7B\Barna"
  DTS:DTSID="{F555C4F4-D6DE-4F85-9F23-620D21029CBB}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5685.0"
  DTS:LocaleID="1038"
  DTS:ObjectName="LoadOpenWeatherCurrent"
  DTS:PackageType="5"
  DTS:VersionBuild="36"
  DTS:VersionGUID="{4BF5B934-63CE-489E-9DDD-DCE162CA1C73}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{90B928F7-2043-4F5E-9CF2-9A59320EF5CD}"
      DTS:ObjectName="LocalHost">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Provider=MSOLEDBSQL.1;Integrated Security=SSPI;Application Name=SSIS-LoadOpenWeatherCurrent-{90B928F7-2043-4F5E-9CF2-9A59320EF5CD}LocalHost;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.dw_test_2]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{6EDCBC41-94AE-4AAC-932A-0B3801ED3CF9}"
      DTS:ObjectName="LocalHost.dw_test_2">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;User ID=;Initial Catalog=dw_test_2;Provider=MSOLEDBSQL.1;Persist Security Info=False;Integrated Security=SSPI;Initial File Name=;Server SPN=;Authentication=;Access Token=;Application Name=SSIS-LoadOpenWeatherCurrent-{6EDCBC41-94AE-4AAC-932A-0B3801ED3CF9}LocalHost.dw_test_2;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.weather-warehouse]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{C3C97342-14EA-4DF8-B427-367BB6489FE0}"
      DTS:ObjectName="LocalHost.weather-warehouse">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Initial Catalog=weather-warehouse;Provider=SQLOLEDB.1;Integrated Security=SSPI;Application Name=SSIS-LoadOpenWeatherCurrent-{C3C97342-14EA-4DF8-B427-367BB6489FE0}LocalHost.weather-warehouse;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9249383D-462C-4A36-9661-881108E1CB17}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CityName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6406D3F1-20B4-4767-9C3D-3B4DEDA455CC}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CloudCover">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BA4F8C37-6484-4EFF-BE77-70D041D153E6}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CountryCode">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{58D29359-6435-49DD-8228-4D9BF4F9E39B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Description">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0ABC545F-A681-4ACC-B9ED-FE774C61E881}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Humidity">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1C3EFCAB-45C6-42F0-BDDB-5A68A3E1E4B6}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="IconCode">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6C15D71F-8E1E-41AA-B28A-53151FA88315}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Latitude">
      <DTS:VariableValue
        DTS:DataType="5">0.</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C9B349EF-8C2D-42DE-8B00-BABF451FCBB3}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Longitude">
      <DTS:VariableValue
        DTS:DataType="5">0.</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CD208A9F-E3C6-4779-A26B-1975993A5D1C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="MainCondition">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5DBE4DF0-2599-418F-A3AA-B858665DF444}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="MaxTemperature">
      <DTS:VariableValue
        DTS:DataType="5">0.</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3BC75EAE-EC19-46D5-8FEC-FC9D0E2B47D0}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="MinTemperature">
      <DTS:VariableValue
        DTS:DataType="5">0.</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9B655774-E383-416E-82F9-C71DFC9DB0AB}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ObservationTime">
      <DTS:VariableValue
        DTS:DataType="7">4/16/2025 10:26:09 AM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{57D25A8E-4A5E-42BB-BDD6-CC14C0145A05}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Pressure">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{55A453DD-F802-41E8-8CB7-52A0C393EE6B}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Temperature">
      <DTS:VariableValue
        DTS:DataType="5">0.</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{024FCB4C-B696-4CFB-B3AB-8D3BFA1C5307}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="WindSpeed">
      <DTS:VariableValue
        DTS:DataType="5">0.</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Data Flow Task"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{5F081BB7-7800-4952-8DD4-9E797E934BAC}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Data Flow Task"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Data Flow Task\BuildDateRow"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="BuildDateRow"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public WeatherOutputBuffer WeatherOutputBuffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != WeatherOutputBuffer)
        {
            WeatherOutputBuffer.SetEndOfRowset();
            WeatherOutputBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"WeatherOutput"))
            {
                WeatherOutputBuffer = new WeatherOutputBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String CityName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["CityName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Int32 CloudCover
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["CloudCover"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String CountryCode
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["CountryCode"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String Description
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["Description"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Int32 Humidity
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["Humidity"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String IconCode
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["IconCode"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Double Latitude
    {
        get
        {
            return (Double)(ParentComponent.ReadOnlyVariables["Latitude"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Double Longitude
    {
        get
        {
            return (Double)(ParentComponent.ReadOnlyVariables["Longitude"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String MainCondition
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["MainCondition"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Double MaxTemperature
    {
        get
        {
            return (Double)(ParentComponent.ReadOnlyVariables["MaxTemperature"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Double MinTemperature
    {
        get
        {
            return (Double)(ParentComponent.ReadOnlyVariables["MinTemperature"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public DateTime ObservationTime
    {
        get
        {
            return (DateTime)(ParentComponent.ReadOnlyVariables["ObservationTime"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Int32 Pressure
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["Pressure"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Double Temperature
    {
        get
        {
            return (Double)(ParentComponent.ReadOnlyVariables["Temperature"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Double WindSpeed
    {
        get
        {
            return (Double)(ParentComponent.ReadOnlyVariables["WindSpeed"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */
        System.Diagnostics.Debug.WriteLine("This is a debug log from script component.");

        WeatherOutputBuffer.AddRow();
        WeatherOutputBuffer.CityName = Variables.CityName;
        WeatherOutputBuffer.CountryCode = Variables.CountryCode;
        WeatherOutputBuffer.Latitude = Variables.Latitude;
        WeatherOutputBuffer.Longitude = Variables.Longitude;

        WeatherOutputBuffer.Temperature = Variables.Temperature;
        WeatherOutputBuffer.MinTemperature = Variables.MinTemperature;
        WeatherOutputBuffer.MaxTemperature = Variables.MaxTemperature;
        WeatherOutputBuffer.Humidity = Variables.Humidity;
        WeatherOutputBuffer.Pressure = Variables.Pressure;
        WeatherOutputBuffer.WindSpeed = Variables.WindSpeed;
        WeatherOutputBuffer.CloudCover = Variables.CloudCover;

        WeatherOutputBuffer.MainCondition = Variables.MainCondition;
        WeatherOutputBuffer.Description = Variables.Description;
        WeatherOutputBuffer.IconCode = Variables.IconCode;
        WeatherOutputBuffer.ObservationTime = Variables.ObservationTime;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class WeatherOutputBuffer: ScriptBuffer

{
    public WeatherOutputBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public DateTime ObservationTime
    {
        set
        {
            this[0] = value;
        }
    }
    public bool ObservationTime_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String IconCode
    {
        set
        {
            this[1] = value;
        }
    }
    public bool IconCode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Description
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Description_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String MainCondition
    {
        set
        {
            this[3] = value;
        }
    }
    public bool MainCondition_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 CloudCover
    {
        set
        {
            this[4] = value;
        }
    }
    public bool CloudCover_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Double WindSpeed
    {
        set
        {
            this[5] = value;
        }
    }
    public bool WindSpeed_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Pressure
    {
        set
        {
            this[6] = value;
        }
    }
    public bool Pressure_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Humidity
    {
        set
        {
            this[7] = value;
        }
    }
    public bool Humidity_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Double MaxTemperature
    {
        set
        {
            this[8] = value;
        }
    }
    public bool MaxTemperature_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Double MinTemperature
    {
        set
        {
            this[9] = value;
        }
    }
    public bool MinTemperature_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Double Temperature
    {
        set
        {
            this[10] = value;
        }
    }
    public bool Temperature_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Double Longitude
    {
        set
        {
            this[11] = value;
        }
    }
    public bool Longitude_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Double Latitude
    {
        set
        {
            this[12] = value;
        }
    }
    public bool Latitude_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CountryCode
    {
        set
        {
            this[13] = value;
        }
    }
    public bool CountryCode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CityName
    {
        set
        {
            this[14] = value;
        }
    }
    public bool CityName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d1c5aa0b00d2413d9a7bed5da8d7e10e.Properties.Settings.get_Default():SC_d1c5aa0b00d2413d9a7bed5da8d7e10e.Properties.Sett" +
    "ings")]

namespace SC_d1c5aa0b00d2413d9a7bed5da8d7e10e.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_d1c5aa0b00d2413d9a7bed5da8d7e10e</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_d1c5aa0b00d2413d9a7bed5da8d7e10e</msb:DisplayName>
    <msb:ProjectId>{F034C8B2-04C8-4B6C-8AEB-E75DBC6200F7}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_d1c5aa0b00d2413d9a7bed5da8d7e10e.csproj" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:Breakpoint Include="a17da6b183e147bb95a0f9fc34d76f42">
      <msb:FileName>main.cs</msb:FileName>
      <msb:ColumnNumber>9</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:LineNumber>113</msb:LineNumber>
      <msb:Condition>
      </msb:Condition>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
    <msb:Breakpoint Include="9cc94e68cdef4f2a86dce2b94193cfeb">
      <msb:FileName>main.cs</msb:FileName>
      <msb:ColumnNumber>9</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:LineNumber>130</msb:LineNumber>
      <msb:Condition>
      </msb:Condition>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_d1c5aa0b00d2413d9a7bed5da8d7e10e")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_d1c5aa0b00d2413d9a7bed5da8d7e10e")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_d1c5aa0b00d2413d9a7bed5da8d7e10e.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{3CB2D23A-1665-406E-B9E8-86AC4DB99843}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_d1c5aa0b00d2413d9a7bed5da8d7e10e</RootNamespace>
    <AssemblyName>SC_d1c5aa0b00d2413d9a7bed5da8d7e10e</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d1c5aa0b00d2413d9a7bed5da8d7e10e.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d1c5aa0b00d2413d9a7bed5da8d7e10e.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d1c5aa0b00d2413d9a7bed5da8d7e10e.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_d1c5aa0b00d2413d9a7bed5da8d7e10e.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_d1c5aa0b00d2413d9a7bed5da8d7e10e.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_d1c5aa0b00d2413d9a7bed5da8d7e10e.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAI+o/2cAAAAAAAAAAOAAIiALATAAACIAAAAIAAAAAAAA7kEA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAJxBAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA9CEAAAAgAAAAIgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAkAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAKgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADQ
QQAAAAAAAEgAAAACAAUAZCcAAIAZAAABAAAAAAAAAORAAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAIAVgEAAAAAAAACewMAAARv
JAAABgJ7AwAABAJ7AgAABG8uAAAGbyIAAAYCewMAAAQCewIAAARvMAAABm8gAAAGAnsDAAAEAnsC
AAAEbzQAAAZvHgAABgJ7AwAABAJ7AgAABG81AAAGbxwAAAYCewMAAAQCewIAAARvOwAABm8aAAAG
AnsDAAAEAnsCAAAEbzgAAAZvGAAABgJ7AwAABAJ7AgAABG83AAAGbxYAAAYCewMAAAQCewIAAARv
MgAABm8UAAAGAnsDAAAEAnsCAAAEbzoAAAZvEgAABgJ7AwAABAJ7AgAABG88AAAGbxAAAAYCewMA
AAQCewIAAARvLwAABm8OAAAGAnsDAAAEAnsCAAAEbzYAAAZvDAAABgJ7AwAABAJ7AgAABG8xAAAG
bwoAAAYCewMAAAQCewIAAARvMwAABm8IAAAGAnsDAAAEAnsCAAAEbzkAAAZvBgAABioeAignAAAG
KioCAwQFKBIAAAoqOgIWA4wRAAABKBMAAAoqWgMsCAIWKBQAAAoqcgEAAHBzFQAACnomAhcDKBMA
AAoqWgMsCAIXKBQAAAoqcgEAAHBzFQAACnomAhgDKBMAAAoqWgMsCAIYKBQAAAoqcgEAAHBzFQAA
CnomAhkDKBMAAAoqWgMsCAIZKBQAAAoqcgEAAHBzFQAACno6AhoDjBwAAAEoEwAACipaAywIAhoo
FAAACipyAQAAcHMVAAAKejoCGwOMHQAAASgTAAAKKloDLAgCGygUAAAKKnIBAABwcxUAAAp6OgIc
A4wcAAABKBMAAAoqWgMsCAIcKBQAAAoqcgEAAHBzFQAACno6Ah0DjBwAAAEoEwAACipaAywIAh0o
FAAACipyAQAAcHMVAAAKejoCHgOMHQAAASgTAAAKKloDLAgCHigUAAAKKnIBAABwcxUAAAp6PgIf
CQOMHQAAASgTAAAKKl4DLAkCHwkoFAAACipyAQAAcHMVAAAKej4CHwoDjB0AAAEoEwAACipeAywJ
Ah8KKBQAAAoqcgEAAHBzFQAACno+Ah8LA4wdAAABKBMAAAoqXgMsCQIfCygUAAAKKnIBAABwcxUA
AAp6PgIfDAOMHQAAASgTAAAKKl4DLAkCHwwoFAAACipyAQAAcHMVAAAKeioCHw0DKBMAAAoqXgMs
CQIfDSgUAAAKKnIBAABwcxUAAAp6KgIfDgMoEwAACipeAywJAh8OKBQAAAoqcgEAAHBzFQAACnoe
AigWAAAKKh4CKBcAAAoqHgIoGAAACip+AigZAAAKAgJzLAAABn0BAAAEAgJzLQAABn0CAAAEKgYq
bgJ7AwAABCwSAnsDAAAEbyUAAAYCFH0DAAAEKhMwBQBJAAAAAQAAERYKKy4EBpQOBHKeAABwKBoA
AAozGQIFBpoCBAaUKBsAAAoOBHMFAAAGfQMAAAQGF1gKBgMyzgJvKwAABgJvKAAABgIoKQAABio6
AigcAAAKAgN9BAAABCo6AigcAAAKAgN9BQAABCqWAnsFAAAEbx0AAApyugAAcG8eAAAKKB8AAApv
IAAACnQiAAABKpYCewUAAARvHQAACnLMAABwbx4AAAooHwAACm8gAAAKpRwAAAEqlgJ7BQAABG8d
AAAKcuIAAHBvHgAACigfAAAKbyAAAAp0IgAAASqWAnsFAAAEbx0AAApy+gAAcG8eAAAKKB8AAApv
IAAACnQiAAABKpYCewUAAARvHQAACnISAQBwbx4AAAooHwAACm8gAAAKpRwAAAEqlgJ7BQAABG8d
AAAKciQBAHBvHgAACigfAAAKbyAAAAp0IgAAASqWAnsFAAAEbx0AAApyNgEAcG8eAAAKKB8AAApv
IAAACqUdAAABKpYCewUAAARvHQAACnJIAQBwbx4AAAooHwAACm8gAAAKpR0AAAEqlgJ7BQAABG8d
AAAKclwBAHBvHgAACigfAAAKbyAAAAp0IgAAASqWAnsFAAAEbx0AAApyeAEAcG8eAAAKKB8AAApv
IAAACqUdAAABKpYCewUAAARvHQAACnKWAQBwbx4AAAooHwAACm8gAAAKpR0AAAEqlgJ7BQAABG8d
AAAKcrQBAHBvHgAACigfAAAKbyAAAAqlEQAAASqWAnsFAAAEbx0AAApy1AEAcG8eAAAKKB8AAApv
IAAACqUcAAABKpYCewUAAARvHQAACnLmAQBwbx4AAAooHwAACm8gAAAKpR0AAAEqlgJ7BQAABG8d
AAAKcv4BAHBvHgAACigfAAAKbyAAAAqlHQAAASoeAigcAAAKKq5+BgAABC0echICAHDQBwAAAigh
AAAKbyIAAApzIwAACoAGAAAEfgYAAAQqGn4HAAAEKh4CgAcAAAQqGn4IAAAEKh4CKCQAAAoqLnNC
AAAGgAgAAAQqAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAJAKAAAjfgAA/AoA
ABwKAAAjU3RyaW5ncwAAAAAYFQAAhAIAACNVUwCcFwAAEAAAACNHVUlEAAAArBcAANQBAAAjQmxv
YgAAAAAAAAACAAABVxWiAQkBAAAA+gEzABYAAAEAAAAlAAAACAAAAAgAAABDAAAAKAAAACQAAAAQ
AAAAAQAAAAQAAAAwAAAAMQAAAAEAAAAFAAAAAQAAAAAAmwQBAAAAAAAGAJUD4QcGACkE4QcGAOEC
zgcPAFUIAAAGAA4DdgYGAHgDdgYGAFkDdgYGABAEdgYGALUDdgYGAM4DdgYGACUDdgYGAEADZAQK
AOkDqAEKADwHqAEOAC0HqAEKAPIGqAEGAHcBLgYKAE0JqAEGAA0JLgYGAMQCzgcGAGEHAQgGAOYG
YQYSAJQChQQSAPUChQQSAHwCTAYGAKkC4QcGAKwGLgYGADoALgYGADIBLgYWABEAcQcWAAEAcQdL
ALsJAAAWACIAcQcGAH4ELgYGAMkBLgYGADkBLgYGAPYJdgYAAAAAQAAAAAAAAQABAAEAEABBBgAA
EAABAAEAAQAQAEkHAAA5AAEABQABABAALwkAAEkAAQAnAAEAEADXCAAATQAEACwAAQAQAJ8IAABN
AAUALQAAABAACAhkCE0ABgA9AAABEADOCGQIZQAIAEEABgDXCIEABgCfCIUABgBJB4kAAQA9CY0A
AQA9CY0AEQA1BpEAEQBsApUAEQCyAJkAUCAAAAAAxgBHBAYAAQBYIAAAAADGAFIEBgABAGAgAAAA
AMYA+QgGAAEAwiEAAAAAhhi3BwYAAQDKIQAAAACGGLcHGwABANUhAAAAAIYIlAGdAAQA5CEAAAAA
hghABaMABQD7IQAAAACGCM8AEAAGAAUiAAAAAIYI2ASjAAcAHCIAAAAAhgjWBhAACAAmIgAAAACG
CNMFowAJAD0iAAAAAIYImgYQAAoARyIAAAAAhgi6BaMACwBeIgAAAACGCKgHAQAMAG0iAAAAAIYI
6gWjAA0AhCIAAAAAhghsAKgADgCTIgAAAACGCMMEowAPAKoiAAAAAIYI2wEBABAAuSIAAAAAhghb
BaMAEQDQIgAAAACGCAwKAQASAN8iAAAAAIYIAAajABMA9iIAAAAAhghBAqgAFAAFIwAAAACGCKAF
owAVABwjAAAAAIYIGwKoABYALCMAAAAAhgiGBaMAFwBEIwAAAACGCPgBqAAYAFQjAAAAAIYIbwWj
ABkAbCMAAAAAhggKAagAGgB8IwAAAACGCAMFowAbAJQjAAAAAIYIJQGoABwApCMAAAAAhggYBaMA
HQC8IwAAAACGCOwAEAAeAMcjAAAAAIYI7ASjAB8A3yMAAAAAhghqARAAIADqIwAAAACGCCwFowAh
AAIkAAAAAIYA6wkGACIACiQAAAAAhgAUCQYAIgASJAAAAACGABcJKwAiABokAAAAAIYYtwcGACIA
OiQAAAAAxgHrCAYAIgA8JAAAAACBAHoABgAiAFgkAAAAAMYAmwmtACIAOiQAAAAAxgH5CAYAJgCt
JAAAAACGGLcHuQAmALwkAAAAAIYYtwe5ACcAyyQAAAAAhghdAb8AKADxJAAAAACGCJkHwwAoABcl
AAAAAIYI3AC/ACgAPSUAAAAAhgjGBr8AKABjJQAAAACGCP8JwwAoAIklAAAAAIYIwgC/ACgAryUA
AAAAhggYAccAKADVJQAAAACGCPwAxwAoAPslAAAAAIYIiAa/ACgAISYAAAAAhgguAscAKABHJgAA
AACGCAgCxwAoAG0mAAAAAIYIgAHLACgAkyYAAAAAhgjOAcMAKAC5JgAAAACGCOgBxwAoAN8mAAAA
AIYIXgDHACgABScAAAAAgxi3BwYAKAANJwAAAACTCF0H0AAoADknAAAAAJMIVALVACgAQCcAAAAA
kwhgAtoAKABIJwAAAACWCCMJ4AApAE8nAAAAAIYYtwcGACkAVycAAAAAkRi9B+UAKQAAAAEAVgcA
AAIAqQgAAAMAAAcAAAEAXgQAAAEAXgQAAAEAXgQAAAEAXgQAAAEAXgQAAAEAXgQAAAEAXgQAAAEA
XgQAAAEAXgQAAAEAXgQAAAEAXgQAAAEAXgQAAAEAXgQAAAEAXgQAAAEAXgQAAAEAXgQAAAEAXgQA
AAEAXgQAAAEAXgQAAAEAXgQAAAEAXgQAAAEAXgQAAAEAXgQAAAEAXgQAAAEAXgQAAAEAXgQAAAEA
XgQAAAEAXgQAAAEAXgQAAAEAXgQAAAEA8QgAAAIAxAcAAAMA4wgAAAQAAAcAAAEAUwkAAAEAUwkA
AAEAXgQJALcHAQARALcHBgAZALcHCgApALcHEAAxALcHEAA5ALcHEABBALcHEABJALcHEABRALcH
EABZALcHEABhALcHEABpALcHBgChALcHBgDBALcHFQDRALcHBgCRAEcEBgCRAFIEBgBxALcHGwBx
ACUGJQBxABQGAQDZALcHEABxAOsJBgBxABQJBgBxABcJKwCRALcHBgCRAEkAMwCRAL0IOgCZALcH
BgCRAJMIQADxABwGRQCRANYJSwD5AKcJUQAZAUsBWAAZAfIJYQCpALcHZwDJALcHBgAuAAsADQEu
ABMAFgEuABsANQEuACMAPgEuACsAZwEuADMAZwEuADsAZwEuAEMAPgEuAEsAbQEuAFMAZwEuAFsA
hAFDAGMAzgHjAGsAzgEBAXsAzgHJBXMANQHpBXMANQEvAAMAAQAGAB8ABwAuAAgAMAAAAJgB6QAA
AEQF7gAAANMA8gAAANwE7gAAANoG8gAAANcF7gAAAJ4G8gAAAL4F7gAAAKwH9gAAAO4F7gAAAHAA
+gAAAMcE7gAAAN8B9gAAAF8F7gAAABAK9gAAAAQG7gAAAEUC+gAAAKQF7gAAAB8C+gAAAIoF7gAA
AEgC+gAAAKcF7gAAAA4B+gAAAAcF7gAAACkB+gAAABwF7gAAAPAA8gAAAPAE7gAAAG4B8gAAADAF
7gAAAG4B8gAAAKwH9gAAAPAA8gAAANoG8gAAABAK9gAAANMA8gAAACkB+gAAAA4B+gAAAJ4G8gAA
AEUC+gAAAB8C+gAAAJgB6QAAAN8B9gAAAEgC+gAAAHAA+gAAAGEH/gAAAHQCAwEAACcJCAEBAAYA
AwABAAcABQABAAgABwABAAkACQABAAoACwABAAsADQABAAwADwABAA0AEQABAA4AEwABAA8AFQAB
ABAAFwABABEAGQABABIAGwABABMAHQABABQAHwABABUAIQABABYAIwABABcAJQABABgAJwABABkA
KQABABoAKwABABsALQABABwALwABAB0AMQABAB4AMwABAB8ANQABACAANwABACEAOQABACIAOwAB
ACMAPQACAC4APwACAC8AQQACADAAQwACADEARQACADIARwACADMASQACADQASwACADUATQACADYA
TwACADcAUQACADgAUwACADkAVQACADoAVwACADsAWQACADwAWwACAD4AXQACAD8AXwABAEAAXwAC
AEEAYQAEgAAAAQAAAAAAAAAAAAAAAACOAAAABAAAAAAAAAAAAAAAbwBVAAAAAAAQAAAAAAAAAAAA
AAB4AF0JAAAAABAAAAAAAAAAAAAAAHgAegkAAAAABAAAAAAAAAAAAAAAbwAuBgAAAAAQAAAAAAAA
AAAAAAB4AAoHAAAAAAAAAAABAAAAEggAAAAAAAAASURUU1ZhcmlhYmxlMTAwAElEVFNWYXJpYWJs
ZXMxMDAASURUU0V2YWx1YXRvckNvbnRleHQxMDAASW50MzIAPE1vZHVsZT4AR2V0T3V0cHV0SUQA
bXNjb3JsaWIAZ2V0X1dpbmRTcGVlZABzZXRfV2luZFNwZWVkAE1hcmtPdXRwdXRzRmluaXNoZWQA
U0NfZDFjNWFhMGIwMGQyNDEzZDlhN2JlZDVkYThkN2UxMGUAZGVmYXVsdEluc3RhbmNlAGdldF9J
Y29uQ29kZQBzZXRfSWNvbkNvZGUAZ2V0X0NvdW50cnlDb2RlAHNldF9Db3VudHJ5Q29kZQBnZXRf
TG9uZ2l0dWRlAHNldF9Mb25naXR1ZGUAZ2V0X0xhdGl0dWRlAHNldF9MYXRpdHVkZQBEb3VibGUA
UnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAZ2V0X0NpdHlOYW1lAHNldF9DaXR5
TmFtZQBEYXRlVGltZQBnZXRfT2JzZXJ2YXRpb25UaW1lAHNldF9PYnNlcnZhdGlvblRpbWUATWlj
cm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAVHlwZQBnZXRfUHJlc3N1cmUAc2V0X1ByZXNz
dXJlAGdldF9UZW1wZXJhdHVyZQBzZXRfVGVtcGVyYXR1cmUAZ2V0X01pblRlbXBlcmF0dXJlAHNl
dF9NaW5UZW1wZXJhdHVyZQBnZXRfTWF4VGVtcGVyYXR1cmUAc2V0X01heFRlbXBlcmF0dXJlAGdl
dF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdz
QmFzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1
Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3Nh
YmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRy
aWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJp
YnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNB
dHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmli
dXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFu
eUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RF
eGVjdXRlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAU3RyaW5nAFN5c3RlbS5Db21w
b25lbnRNb2RlbABTQ19kMWM1YWEwYjAwZDI0MTNkOWE3YmVkNWRhOGQ3ZTEwZS5kbGwAc2V0X1dp
bmRTcGVlZF9Jc051bGwAc2V0X0ljb25Db2RlX0lzTnVsbABzZXRfQ291bnRyeUNvZGVfSXNOdWxs
AHNldF9Mb25naXR1ZGVfSXNOdWxsAHNldF9MYXRpdHVkZV9Jc051bGwAc2V0X0NpdHlOYW1lX0lz
TnVsbABzZXRfT2JzZXJ2YXRpb25UaW1lX0lzTnVsbABzZXRfUHJlc3N1cmVfSXNOdWxsAHNldF9U
ZW1wZXJhdHVyZV9Jc051bGwAc2V0X01pblRlbXBlcmF0dXJlX0lzTnVsbABzZXRfTWF4VGVtcGVy
YXR1cmVfSXNOdWxsAHNldF9NYWluQ29uZGl0aW9uX0lzTnVsbABzZXRfRGVzY3JpcHRpb25fSXNO
dWxsAHNldF9DbG91ZENvdmVyX0lzTnVsbABzZXRfSHVtaWRpdHlfSXNOdWxsAFNldE51bGwAZ2V0
X0l0ZW0Ac2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZp
Z3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AZ2V0X01haW5D
b25kaXRpb24Ac2V0X01haW5Db25kaXRpb24ASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBnZXRf
RGVzY3JpcHRpb24Ac2V0X0Rlc2NyaXB0aW9uAEN1bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0
cHV0TWFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUnVudGltZVdyYXAAUGlwZWxpbmVCdWZmZXIA
U2NyaXB0QnVmZmVyAFdlYXRoZXJPdXRwdXRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBNaWNy
b3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIAZ2V0X0Nsb3VkQ292ZXIAc2V0X0Ns
b3VkQ292ZXIALmN0b3IALmNjdG9yAE91dHB1dElEcwBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVt
LlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDX2QxYzVhYTBiMDBk
MjQxM2Q5YTdiZWQ1ZGE4ZDdlMTBlLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1
Z2dpbmdNb2RlcwBTQ19kMWM1YWEwYjAwZDI0MTNkOWE3YmVkNWRhOGQ3ZTEwZS5Qcm9wZXJ0aWVz
AGdldF9SZWFkT25seVZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4
ZXMAU2V0dGluZ3MAQ29ubmVjdGlvbnMAQnVmZmVycwBGaW5pc2hPdXRwdXRzAENyZWF0ZU5ld091
dHB1dFJvd3MAT2JqZWN0AFNldEVuZE9mUm93c2V0AGdldF9EZWZhdWx0AFVzZXJDb21wb25lbnQA
UGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2Ny
aXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AFByaW1lT3V0cHV0AEdldFZhbHVl
V2l0aENvbnRleHQAU2NyaXB0Q29tcG9uZW50RXZhbENvbnRleHQAZ2V0X0V2YWx1YXRvckNvbnRl
eHQAQWRkUm93AGdldF9Bc3NlbWJseQBnZXRfSHVtaWRpdHkAc2V0X0h1bWlkaXR5AAAAAACAm0kA
cwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAg
AHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAA
dABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAG1cAZQBhAHQAaABlAHIATwB1
AHQAcAB1AHQAABFDAGkAdAB5AE4AYQBtAGUAABVDAGwAbwB1AGQAQwBvAHYAZQByAAAXQwBvAHUA
bgB0AHIAeQBDAG8AZABlAAAXRABlAHMAYwByAGkAcAB0AGkAbwBuAAARSAB1AG0AaQBkAGkAdAB5
AAARSQBjAG8AbgBDAG8AZABlAAARTABhAHQAaQB0AHUAZABlAAATTABvAG4AZwBpAHQAdQBkAGUA
ABtNAGEAaQBuAEMAbwBuAGQAaQB0AGkAbwBuAAAdTQBhAHgAVABlAG0AcABlAHIAYQB0AHUAcgBl
AAAdTQBpAG4AVABlAG0AcABlAHIAYQB0AHUAcgBlAAAfTwBiAHMAZQByAHYAYQB0AGkAbwBuAFQA
aQBtAGUAABFQAHIAZQBzAHMAdQByAGUAABdUAGUAbQBwAGUAcgBhAHQAdQByAGUAABNXAGkAbgBk
AFMAcABlAGUAZAAAcVMAQwBfAGQAMQBjADUAYQBhADAAYgAwADAAZAAyADQAMQAzAGQAOQBhADcA
YgBlAGQANQBkAGEAOABkADcAZQAxADAAZQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBv
AHUAcgBjAGUAcwAAaU4ZGfuwaUG46CCupUGyZAAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERXQkg
AwESPR0IEkEFIAIBCBwDIAACAwcBCAYAAggSQQ4FIAEdCAgEIAASeQUgARJ9HAUAABKAgQYgARwS
gIUIAAESgI0RgJEFIAASgJUHIAIBDhKAlQi3elxWGTTgiQiJhF3NgIDMkQMGEhQDBhIYAwYSDAMG
EkkDBhJVAwYSWQMGEiAFIAEBEUUEIAEBAgQgAQENCyAEAQgdCB0SPRJBBSABARJJAyAADgMgAAgD
IAANBCAAEUUEAAASVQQAABJZBQABARJZBAAAEiADAAABBCgAEUUDKAACAygADgMoAAgDKAANBAgA
ElUECAASWQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIA
AAAAACgBACNTQ19kMWM1YWEwYjAwZDI0MTNkOWE3YmVkNWRhOGQ3ZTEwZQAABQEAAAAAFgEAEUNv
cHlyaWdodCBAICAyMDI1AABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1l
d29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNwQBAAAAALQAAADOyu++AQAAAJEAAABs
U3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAu
MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3Rl
bS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAADEQQAA
AAAAAAAAAADeQQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0EEAAAAAAAAAAAAAAABfQ29yRGxs
TWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAA
AAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAA
AOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+
AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBh
AHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAA
sARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAANABi
ADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEA
bQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBf
AGQAMQBjADUAYQBhADAAYgAwADAAZAAyADQAMQAzAGQAOQBhADcAYgBlAGQANQBkAGEAOABkADcA
ZQAxADAAZQAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAA
AHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AZAAxAGMANQBhAGEAMABiADAA
MABkADIANAAxADMAZAA5AGEANwBiAGUAZAA1AGQAYQA4AGQANwBlADEAMABlAC4AZABsAGwAAABI
ABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAA
IAAgADIAMAAyADUAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAA
AHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwBkADEAYwA1AGEA
YQAwAGIAMAAwAGQAMgA0ADEAMwBkADkAYQA3AGIAZQBkADUAZABhADgAZAA3AGUAMQAwAGUALgBk
AGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AZAAxAGMANQBhAGEA
MABiADAAMABkADIANAAxADMAZAA5AGEANwBiAGUAZAA1AGQAYQA4AGQANwBlADEAMABlAAAANAAI
AAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAABAEEA
cwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAADwMQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_d1c5aa0b00d2413d9a7bed5da8d7e10e</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::CityName,User::CloudCover,User::CountryCode,User::Description,User::Humidity,User::IconCode,User::Latitude,User::Longitude,User::MainCondition,User::MaxTemperature,User::MinTemperature,User::ObservationTime,User::Pressure,User::Temperature,User::WindSpeed</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String">&lt;SOAP-ENV:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"&gt;
&lt;SOAP-ENV:Body&gt;
&lt;a1:ScriptBreakpointInfo id="ref-1" xmlns:a1="http://schemas.microsoft.com/clr/nsassem/Microsoft.SqlServer.VSTAHosting/Microsoft.SqlServer.VSTAScriptingLib%2C%20Version%3D16.0.0.0%2C%20Culture%3Dneutral%2C%20PublicKeyToken%3D89845dcd8080cc91"&gt;
&lt;Enabled&gt;true&lt;/Enabled&gt;
&lt;File id="ref-3"&gt;main.cs&lt;/File&gt;
&lt;FileLine&gt;113&lt;/FileLine&gt;
&lt;FileColumn&gt;9&lt;/FileColumn&gt;
&lt;/a1:ScriptBreakpointInfo&gt;
&lt;/SOAP-ENV:Body&gt;
&lt;/SOAP-ENV:Envelope&gt;
</arrayElement>
                    <arrayElement
                      dataType="System.String">&lt;SOAP-ENV:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"&gt;
&lt;SOAP-ENV:Body&gt;
&lt;a1:ScriptBreakpointInfo id="ref-1" xmlns:a1="http://schemas.microsoft.com/clr/nsassem/Microsoft.SqlServer.VSTAHosting/Microsoft.SqlServer.VSTAScriptingLib%2C%20Version%3D16.0.0.0%2C%20Culture%3Dneutral%2C%20PublicKeyToken%3D89845dcd8080cc91"&gt;
&lt;Enabled&gt;true&lt;/Enabled&gt;
&lt;File id="ref-3"&gt;main.cs&lt;/File&gt;
&lt;FileLine&gt;130&lt;/FileLine&gt;
&lt;FileColumn&gt;9&lt;/FileColumn&gt;
&lt;/a1:ScriptBreakpointInfo&gt;
&lt;/SOAP-ENV:Body&gt;
&lt;/SOAP-ENV:Envelope&gt;
</arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">C1</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <outputs>
                <output
                  refId="Package\Data Flow Task\BuildDateRow.Outputs[WeatherOutput]"
                  hasSideEffects="true"
                  name="WeatherOutput">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\BuildDateRow.Outputs[WeatherOutput].Columns[ObservationTime]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Data Flow Task\BuildDateRow.Outputs[WeatherOutput].Columns[ObservationTime]"
                      name="ObservationTime" />
                    <outputColumn
                      refId="Package\Data Flow Task\BuildDateRow.Outputs[WeatherOutput].Columns[IconCode]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\BuildDateRow.Outputs[WeatherOutput].Columns[IconCode]"
                      name="IconCode" />
                    <outputColumn
                      refId="Package\Data Flow Task\BuildDateRow.Outputs[WeatherOutput].Columns[Description]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\BuildDateRow.Outputs[WeatherOutput].Columns[Description]"
                      name="Description" />
                    <outputColumn
                      refId="Package\Data Flow Task\BuildDateRow.Outputs[WeatherOutput].Columns[MainCondition]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\BuildDateRow.Outputs[WeatherOutput].Columns[MainCondition]"
                      name="MainCondition" />
                    <outputColumn
                      refId="Package\Data Flow Task\BuildDateRow.Outputs[WeatherOutput].Columns[CloudCover]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\BuildDateRow.Outputs[WeatherOutput].Columns[CloudCover]"
                      name="CloudCover" />
                    <outputColumn
                      refId="Package\Data Flow Task\BuildDateRow.Outputs[WeatherOutput].Columns[WindSpeed]"
                      dataType="r8"
                      lineageId="Package\Data Flow Task\BuildDateRow.Outputs[WeatherOutput].Columns[WindSpeed]"
                      name="WindSpeed" />
                    <outputColumn
                      refId="Package\Data Flow Task\BuildDateRow.Outputs[WeatherOutput].Columns[Pressure]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\BuildDateRow.Outputs[WeatherOutput].Columns[Pressure]"
                      name="Pressure" />
                    <outputColumn
                      refId="Package\Data Flow Task\BuildDateRow.Outputs[WeatherOutput].Columns[Humidity]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\BuildDateRow.Outputs[WeatherOutput].Columns[Humidity]"
                      name="Humidity" />
                    <outputColumn
                      refId="Package\Data Flow Task\BuildDateRow.Outputs[WeatherOutput].Columns[MaxTemperature]"
                      dataType="r8"
                      lineageId="Package\Data Flow Task\BuildDateRow.Outputs[WeatherOutput].Columns[MaxTemperature]"
                      name="MaxTemperature" />
                    <outputColumn
                      refId="Package\Data Flow Task\BuildDateRow.Outputs[WeatherOutput].Columns[MinTemperature]"
                      dataType="r8"
                      lineageId="Package\Data Flow Task\BuildDateRow.Outputs[WeatherOutput].Columns[MinTemperature]"
                      name="MinTemperature" />
                    <outputColumn
                      refId="Package\Data Flow Task\BuildDateRow.Outputs[WeatherOutput].Columns[Temperature]"
                      dataType="r8"
                      lineageId="Package\Data Flow Task\BuildDateRow.Outputs[WeatherOutput].Columns[Temperature]"
                      name="Temperature" />
                    <outputColumn
                      refId="Package\Data Flow Task\BuildDateRow.Outputs[WeatherOutput].Columns[Longitude]"
                      dataType="r8"
                      lineageId="Package\Data Flow Task\BuildDateRow.Outputs[WeatherOutput].Columns[Longitude]"
                      name="Longitude" />
                    <outputColumn
                      refId="Package\Data Flow Task\BuildDateRow.Outputs[WeatherOutput].Columns[Latitude]"
                      dataType="r8"
                      lineageId="Package\Data Flow Task\BuildDateRow.Outputs[WeatherOutput].Columns[Latitude]"
                      name="Latitude" />
                    <outputColumn
                      refId="Package\Data Flow Task\BuildDateRow.Outputs[WeatherOutput].Columns[CountryCode]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\BuildDateRow.Outputs[WeatherOutput].Columns[CountryCode]"
                      name="CountryCode" />
                    <outputColumn
                      refId="Package\Data Flow Task\BuildDateRow.Outputs[WeatherOutput].Columns[CityName]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\BuildDateRow.Outputs[WeatherOutput].Columns[CityName]"
                      name="CityName" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Create DateKey"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Create DateKey"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Data Flow Task\Create DateKey.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Create DateKey.Inputs[Derived Column Input].Columns[ObservationTime]"
                      cachedDataType="dbTimeStamp"
                      cachedName="ObservationTime"
                      lineageId="Package\Data Flow Task\BuildDateRow.Outputs[WeatherOutput].Columns[ObservationTime]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Create DateKey.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Data Flow Task\Create DateKey.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Create DateKey.Outputs[Derived Column Output].Columns[DateKey]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Data Flow Task\Create DateKey.Outputs[Derived Column Output].Columns[DateKey]"
                      name="DateKey"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_I4)([YEAR](#{Package\Data Flow Task\BuildDateRow.Outputs[WeatherOutput].Columns[ObservationTime]}) * 10000 + [MONTH](#{Package\Data Flow Task\BuildDateRow.Outputs[WeatherOutput].Columns[ObservationTime]}) * 100 + [DAY](#{Package\Data Flow Task\BuildDateRow.Outputs[WeatherOutput].Columns[ObservationTime]}))</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_I4)(YEAR(ObservationTime) * 10000 + MONTH(ObservationTime) * 100 + DAY(ObservationTime))</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Create DateKey.Outputs[Derived Column Output].Columns[FullDate]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Data Flow Task\Create DateKey.Outputs[Derived Column Output].Columns[FullDate]"
                      name="FullDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">#{Package\Data Flow Task\BuildDateRow.Outputs[WeatherOutput].Columns[ObservationTime]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">ObservationTime</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Create DateKey.Outputs[Derived Column Output].Columns[Day]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Data Flow Task\Create DateKey.Outputs[Derived Column Output].Columns[Day]"
                      name="Day"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[DAY](#{Package\Data Flow Task\BuildDateRow.Outputs[WeatherOutput].Columns[ObservationTime]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">DAY(ObservationTime)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Create DateKey.Outputs[Derived Column Output].Columns[Month]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Data Flow Task\Create DateKey.Outputs[Derived Column Output].Columns[Month]"
                      name="Month"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[MONTH](#{Package\Data Flow Task\BuildDateRow.Outputs[WeatherOutput].Columns[ObservationTime]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">MONTH(ObservationTime)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Create DateKey.Outputs[Derived Column Output].Columns[Year]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Data Flow Task\Create DateKey.Outputs[Derived Column Output].Columns[Year]"
                      name="Year"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[YEAR](#{Package\Data Flow Task\BuildDateRow.Outputs[WeatherOutput].Columns[ObservationTime]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">YEAR(ObservationTime)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Create DateKey.Outputs[Derived Column Output].Columns[Quarter]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Data Flow Task\Create DateKey.Outputs[Derived Column Output].Columns[Quarter]"
                      name="Quarter"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[DATEPART]("quarter",#{Package\Data Flow Task\BuildDateRow.Outputs[WeatherOutput].Columns[ObservationTime]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">DATEPART("quarter",ObservationTime)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Create DateKey.Outputs[Derived Column Output].Columns[WeekdayName]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Data Flow Task\Create DateKey.Outputs[Derived Column Output].Columns[WeekdayName]"
                      name="WeekdayName"
                      truncationRowDisposition="IgnoreFailure">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[DATEPART]("weekday",#{Package\Data Flow Task\BuildDateRow.Outputs[WeatherOutput].Columns[ObservationTime]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">DATEPART("weekday",ObservationTime)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Create DateKey.Outputs[Derived Column Output].Columns[IsWeekend]"
                      dataType="bool"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Data Flow Task\Create DateKey.Outputs[Derived Column Output].Columns[IsWeekend]"
                      name="IsWeekend"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[DATEPART]("weekday",#{Package\Data Flow Task\BuildDateRow.Outputs[WeatherOutput].Columns[ObservationTime]}) == 1</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">DATEPART("weekday",ObservationTime) == 1</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Create DateKey.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Data Flow Task\Create DateKey.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Create DateKey.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Create DateKey.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Create DateKey.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Create DateKey.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Insert Date"
              componentClassID="Microsoft.OLEDBCommand"
              contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
              name="Insert Date"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">INSERT INTO DimDate (
  DateKey, FullDate, Day, Month, MonthName, Quarter, Year, WeekdayName, IsWeekend
) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1250</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Insert Date.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.weather-warehouse]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.weather-warehouse]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Insert Date.Inputs[OLE DB Command Input]"
                  errorOrTruncationOperation="Command Execution"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Command Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Insert Date.Inputs[OLE DB Command Input].Columns[DateKey]"
                      cachedDataType="i4"
                      cachedName="DateKey"
                      externalMetadataColumnId="Package\Data Flow Task\Insert Date.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      lineageId="Package\Data Flow Task\Create DateKey.Outputs[Derived Column Output].Columns[DateKey]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Insert Date.Inputs[OLE DB Command Input].Columns[FullDate]"
                      cachedDataType="dbTimeStamp"
                      cachedName="FullDate"
                      externalMetadataColumnId="Package\Data Flow Task\Insert Date.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      lineageId="Package\Data Flow Task\Create DateKey.Outputs[Derived Column Output].Columns[FullDate]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Insert Date.Inputs[OLE DB Command Input].Columns[Day]"
                      cachedDataType="i4"
                      cachedName="Day"
                      externalMetadataColumnId="Package\Data Flow Task\Insert Date.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      lineageId="Package\Data Flow Task\Create DateKey.Outputs[Derived Column Output].Columns[Day]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Insert Date.Inputs[OLE DB Command Input].Columns[Month]"
                      cachedDataType="i4"
                      cachedName="Month"
                      externalMetadataColumnId="Package\Data Flow Task\Insert Date.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      lineageId="Package\Data Flow Task\Create DateKey.Outputs[Derived Column Output].Columns[Month]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Insert Date.Inputs[OLE DB Command Input].Columns[MonthName]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="MonthName"
                      externalMetadataColumnId="Package\Data Flow Task\Insert Date.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                      lineageId="Package\Data Flow Task\WeekdayName.Outputs[Output 0].Columns[MonthName]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Insert Date.Inputs[OLE DB Command Input].Columns[Quarter]"
                      cachedDataType="i4"
                      cachedName="Quarter"
                      externalMetadataColumnId="Package\Data Flow Task\Insert Date.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                      lineageId="Package\Data Flow Task\Create DateKey.Outputs[Derived Column Output].Columns[Quarter]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Insert Date.Inputs[OLE DB Command Input].Columns[Year]"
                      cachedDataType="i4"
                      cachedName="Year"
                      externalMetadataColumnId="Package\Data Flow Task\Insert Date.Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                      lineageId="Package\Data Flow Task\Create DateKey.Outputs[Derived Column Output].Columns[Year]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Insert Date.Inputs[OLE DB Command Input].Columns[WeekdayName]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="WeekdayName"
                      externalMetadataColumnId="Package\Data Flow Task\Insert Date.Inputs[OLE DB Command Input].ExternalColumns[Param_7]"
                      lineageId="Package\Data Flow Task\WeekdayName.Outputs[Output 0].Columns[WeekdayName]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Insert Date.Inputs[OLE DB Command Input].Columns[IsWeekend]"
                      cachedDataType="bool"
                      cachedName="IsWeekend"
                      externalMetadataColumnId="Package\Data Flow Task\Insert Date.Inputs[OLE DB Command Input].ExternalColumns[Param_8]"
                      lineageId="Package\Data Flow Task\Create DateKey.Outputs[Derived Column Output].Columns[IsWeekend]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Insert Date.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      dataType="i4"
                      name="Param_0">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">17</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Insert Date.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      dataType="wstr"
                      length="10"
                      name="Param_1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Insert Date.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      dataType="i4"
                      name="Param_2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Insert Date.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      dataType="i4"
                      name="Param_3">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Insert Date.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                      dataType="wstr"
                      length="20"
                      name="Param_4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Insert Date.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                      dataType="i4"
                      name="Param_5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Insert Date.Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                      dataType="i4"
                      name="Param_6">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Insert Date.Inputs[OLE DB Command Input].ExternalColumns[Param_7]"
                      dataType="wstr"
                      length="20"
                      name="Param_7">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Insert Date.Inputs[OLE DB Command Input].ExternalColumns[Param_8]"
                      dataType="bool"
                      name="Param_8">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Insert Date.Outputs[OLE DB Command Output]"
                  exclusionGroup="1"
                  name="OLE DB Command Output"
                  synchronousInputId="Package\Data Flow Task\Insert Date.Inputs[OLE DB Command Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Insert Date.Outputs[OLE DB Command Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Command Error Output"
                  synchronousInputId="Package\Data Flow Task\Insert Date.Inputs[OLE DB Command Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Insert Date.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Insert Date.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Insert Date.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Insert Date.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Lookup DimDate"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup DimDate"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[DimDate]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[DimDate]) [refTable]
where [refTable].[DateKey] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="DateKey" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="FullDate" dataType="DT_WSTR" length="10" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Day" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Month" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="MonthName" dataType="DT_WSTR" length="20" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Quarter" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Year" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="WeekdayName" dataType="DT_WSTR" length="20" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="IsWeekend" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Data Flow Task\Create DateKey.Outputs[Derived Column Output].Columns[DateKey]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1250</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Lookup DimDate.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.weather-warehouse]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.weather-warehouse]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Lookup DimDate.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Lookup DimDate.Inputs[Lookup Input].Columns[DateKey]"
                      cachedDataType="i4"
                      cachedName="DateKey"
                      lineageId="Package\Data Flow Task\Create DateKey.Outputs[Derived Column Output].Columns[DateKey]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">DateKey</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Lookup DimDate.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup DimDate.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup DimDate.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup DimDate.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup DimDate.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Data Flow Task\Lookup DimDate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup DimDate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup DimDate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup DimDate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup DimDate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\WeekdayName"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="WeekdayName"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        // Month name like "April"
        Row.MonthName = Row.ObservationTime.ToString("MMMM");

        // Day name like "Wednesday"
        Row.WeekdayName = Row.ObservationTime.ToString("dddd");
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_0befe161acff4a2995eb75f327435e53.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{64858c17-a6cb-4eab-8cfd-a731eb8bf2bc}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_0befe161acff4a2995eb75f327435e53</RootNamespace>
    <AssemblyName>SC_0befe161acff4a2995eb75f327435e53</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_0befe161acff4a2995eb75f327435e53" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0befe161acff4a2995eb75f327435e53.Properties.Settings.get_Default():SC_0befe161acff4a2995eb75f327435e53.Properties.Sett" +
    "ings")]

namespace SC_0befe161acff4a2995eb75f327435e53.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public DateTime ObservationTime
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[0]);
        }
    }
    public bool ObservationTime_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String WeekdayName
    {
        set
        {
            this[1] = value;
        }
    }
    public bool WeekdayName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String MonthName
    {
        set
        {
            this[2] = value;
        }
    }
    public bool MonthName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_0befe161acff4a2995eb75f327435e53</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_0befe161acff4a2995eb75f327435e53</msb:DisplayName>
    <msb:ProjectId>{A51BF12A-2F42-4071-97CC-594B7D0A2B4D}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_0befe161acff4a2995eb75f327435e53.csproj" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_0befe161acff4a2995eb75f327435e53")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_0befe161acff4a2995eb75f327435e53")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0befe161acff4a2995eb75f327435e53.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0befe161acff4a2995eb75f327435e53.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0befe161acff4a2995eb75f327435e53.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_0befe161acff4a2995eb75f327435e53.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_0befe161acff4a2995eb75f327435e53.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_0befe161acff4a2995eb75f327435e53.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDABSg/2cAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAAljIA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAEQyAABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAnBIAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAB4
MgAAAAAAAEgAAAACAAUA+CEAAJQPAAABAAAAAAAAAIwxAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAMAMwAAAAEAABEDA28GAAAG
ChIAcgEAAHAoEgAACm8KAAAGAwNvBgAABgoSAHILAABwKBIAAApvCAAABioeAigOAAAGKioCAwQF
KBMAAAoqUgJ7FAAACgJ7FQAAChaUbxYAAAoqIgIWKBcAAAoqJgIXAygYAAAKKloDLAgCFygZAAAK
KnIVAABwcxoAAAp6JgIYAygYAAAKKloDLAgCGCgZAAAKKnIVAABwcxoAAAp6HgIoGwAACioeAigc
AAAKKn4CKB0AAAoCAnMSAAAGfQEAAAQCAnMTAAAGfQIAAAQqkgRysgAAcBpvHgAACiwVAgUCAygf
AAAKDgRzBQAABm8QAAAGKkorBwIDbxEAAAYDbwwAAAYt8SoGKjoCKCAAAAoCA30DAAAEKjoCKCAA
AAoCA30EAAAEKh4CKCAAAAoqrn4FAAAELR5ywgAAcNAHAAACKCEAAApvIgAACnMjAAAKgAUAAAR+
BQAABCoafgYAAAQqHgKABgAABCoafgcAAAQqHgIoJAAACioucxkAAAaABwAABCpCU0pCAQABAAAA
AAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAC4BQAAI34AACQGAAB4BgAAI1N0cmluZ3MAAAAAnAwA
ADQBAAAjVVMA0A0AABAAAAAjR1VJRAAAAOANAAC0AQAAI0Jsb2IAAAAAAAAAAgAAAVcVogEJAQAA
APoBMwAWAAABAAAAIAAAAAgAAAAHAAAAGgAAABEAAAAkAAAAEAAAAAEAAAADAAAACQAAAAoAAAAB
AAAABAAAAAEAAAAAACoDAQAAAAAABgAiArAEBgC2ArAEBgBuAZ0EDwAkBQAABgCbAfIDBgAFAvID
BgDmAfIDBgCdAvIDBgBCAvIDBgBbAvIDBgCyAfIDBgDNAfECCgB2ArsABgCeAKoDCgBvBLsADgBg
BLsACgA7BLsACgDqBbsABgCtBaoDBgBRAZ0EBgCABNAEBgAvBN0DEgAhARQDEgCCARQDEgAJAcgD
BgA2AbAEBgAEBKoDBgANA6oDBgAeBKoDBgDcAKoDBgBPAKoDBgBvBvIDAAAAACUAAAAAAAEAAQAB
ABAAvQMAABAAAQABAAEAEABTBAAAPQABAAUAAQAQAMwFAABJAAEADgABABAAoQUAAE0AAwASAAEA
EABiBQAATQAEABMAAAAQANcEMwVNAAUAFAAAARAAkQUzBWUABwAYAAYAoQWAAAYAYgWEAAEA2gWI
AAEA2gWIABEAsQOMABEA+QCQABEAPwCUAFAgAAAAAMYA1AIGAAEAWCAAAAAAxgDfAgYAAQBgIAAA
AADGAEwGmAABAJ8gAAAAAIYYkAQGAAIApyAAAAAAhhiQBCUAAgCyIAAAAACGCKcAngAFAMcgAAAA
AIYIfgNIAAUA0CAAAAAAhgiLABAABQDaIAAAAACGCGcDowAGAPEgAAAAAIYIcwAQAAcA+yAAAAAA
hghSA6MACAASIQAAAACGAGMGSAAJABohAAAAAIYAtAVIAAkAIiEAAAAAhhiQBAYACQBCIQAAAADG
AD8GqAAJAGchAAAAAMYBOAaYAA0AeiEAAAAAxgFMBpgADgB8IQAAAACGGJAEsgAPAIshAAAAAIYY
kASyABAAmiEAAAAAgxiQBAYAEQCiIQAAAACTCHwEuAARAM4hAAAAAJMI4QC9ABEA1SEAAAAAkwjt
AMIAEQDdIQAAAACWCMAFyAASAOQhAAAAAIYYkAQGABIA7CEAAAAAkRiWBM0AEgAAAAEAZwYAAAEA
dQQAAAIAbAUAAAMASQQAAAEA6wIAAAEA6wIAAAEA6wIAAAEA6wIAAAEALgAAAAIAgQAAAAMAdQQA
AAQASQQAAAEAdQQAAAEAZwYAAAEA8AUAAAEA8AUAAAEA6wIJAJAEAQARAJAEBgAZAJAECgApAJAE
EAAxAJAEEAA5AJAEEABBAJAEEABJAJAEEABRAJAEEABZAJAEEABhAJAEEABpAJAEBgChAJAEBgDB
AJAEFQDRAJAEBgCRANQCBgCRAN8CBgBxAAsDIAB5AJAEJQB5AHUELwB5AGwFMwCBAJsANwB5AJID
PQB5AKEDQgB5AJkDAQDZAJAEEAB5AGMGSAB5ALQFSACRAJAEBgDhAJoFTACRAIAFUwCZAJAEBgDx
AGEAWQDxAGsGYACpAJAEZgDJAJAEBgAuAAsA7QAuABMA9gAuABsAFQEuACMAHgEuACsARwEuADMA
RwEuADsARwEuAEMAHgEuAEsATQEuAFMARwEuAFsAZAFDAGMArgHhAHsArgHjAGsArgHpAHMAFQEJ
AXMAFQEbAAMAAQAHAAcACAAJAAAAqwDRAAAAggPWAAAAjwDaAAAAawPWAAAAdwDaAAAAVgPWAAAA
gATeAAAAAQHjAAAAxAXoAAIABgADAAIABwAFAAEACAAHAAEACQAJAAEACgALAAEACwANAAIAFQAP
AAIAFgARAAEAFwARAAIAGAATAASAAAABAAAAAAAAAAAAAAAAAAEAAAAEAAAAAAAAAAAAAABuADYA
AAAAABAAAAAAAAAAAAAAAHcA+gUAAAAAEAAAAAAAAAAAAAAAdwAXBgAAAAAEAAAAAAAAAAAAAABu
AKoDAAAAAAAAAAABAAAA4QQAAAAAAAAAU0NfMGJlZmUxNjFhY2ZmNGEyOTk1ZWI3NWYzMjc0MzVl
NTMAPE1vZHVsZT4ASW5wdXRJRABtc2NvcmxpYgBkZWZhdWx0SW5zdGFuY2UAUnVudGltZVR5cGVI
YW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAc2V0X01vbnRoTmFtZQBJbnB1dE5hbWUAc2V0X1dlZWtk
YXlOYW1lAEdldERhdGVUaW1lAGdldF9PYnNlcnZhdGlvblRpbWUATWljcm9zb2Z0LlNxbFNlcnZl
ci5EdHMuUGlwZWxpbmUAVHlwZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1
cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJH
ZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxl
QXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRl
AEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3Nl
bWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBD
b21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBB
c3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0
dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRy
aWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9u
aW5nAFRvU3RyaW5nAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ18wYmVmZTE2MWFjZmY0YTI5OTVl
Yjc1ZjMyNzQzNWU1My5kbGwAc2V0X01vbnRoTmFtZV9Jc051bGwAc2V0X1dlZWtkYXlOYW1lX0lz
TnVsbABnZXRfT2JzZXJ2YXRpb25UaW1lX0lzTnVsbABTZXROdWxsAHNldF9JdGVtAFN5c3RlbQBy
ZXNvdXJjZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxp
emF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AU3RyaW5n
Q29tcGFyaXNvbgBDdWx0dXJlSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABJbnB1dDBCdWZm
ZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIALmN0b3IA
LmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2Vz
AFN5c3RlbS5SZXNvdXJjZXMAU0NfMGJlZmUxNjFhY2ZmNGEyOTk1ZWI3NWYzMjc0MzVlNTMuUHJv
cGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDXzBiZWZlMTYxYWNm
ZjRhMjk5NWViNzVmMzI3NDM1ZTUzLlByb3BlcnRpZXMAVmFyaWFibGVzAEJ1ZmZlckNvbHVtbklu
ZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBFcXVhbHMAQ29ubmVjdGlvbnMAT2JqZWN0
AEVuZE9mUm93c2V0AGdldF9EZWZhdWx0AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNj
cmlwdENvbXBvbmVudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuUGlwZWxpbmVIb3N0AElucHV0MF9Qcm9jZXNzSW5wdXQASW5wdXQwX1Byb2Nlc3NJbnB1
dFJvdwBOZXh0Um93AGdldF9Bc3NlbWJseQAACU0ATQBNAE0AAAlkAGQAZABkAACAm0kAcwBOAHUA
bABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAg
AEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUA
IABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAD0kAbgBwAHUAdAAgADAAAHFTAEMAXwAw
AGIAZQBmAGUAMQA2ADEAYQBjAGYAZgA0AGEAMgA5ADkANQBlAGIANwA1AGYAMwAyADcANAAzADUA
ZQA1ADMALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAMZee914QihN
min0L1p0G0UABCABAQgDIAABBSABARERBCABAQ4FIAEBEV0EBwEROQQgAQ4OCSADARJBHQgSRQMG
EkEDBh0IBSABETkIBCABAggFIAIBCBwDIAACBiACAg4RdQUgAR0ICAYAARJ5EX0FIAASgIEHIAIB
DhKAgQi3elxWGTTgiQiJhF3NgIDMkQMGEhQDBhIYAwYSSQMGElUDBhJZAwYSIAUgAQESDAQgABE5
BCABAQIJIAQBCA4SQRJFBSABARJJBAAAElUEAAASWQUAAQESWQQAABIgAwAAAQQoABE5AygAAgMo
AA4ECAASVQQIABJZBAgAEiAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MB
CAEAAgAAAAAAKAEAI1NDXzBiZWZlMTYxYWNmZjRhMjk5NWViNzVmMzI3NDM1ZTUzAAAFAQAAAAAW
AQARQ29weXJpZ2h0IEAgIDIwMjUAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4U
RnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43BAEAAAAAtAAAAM7K774BAAAA
kQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00
LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkj
U3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAA
AGwyAAAAAAAAAAAAAIYyAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4MgAAAAAAAAAAAAAAAF9D
b3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAEMAXwAwAGIAZQBmAGUAMQA2ADEAYQBjAGYAZgA0AGEAMgA5ADkANQBlAGIANwA1AGYAMwAy
ADcANAAzADUAZQA1ADMAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
MAAuADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADAAYgBlAGYAZQAx
ADYAMQBhAGMAZgBmADQAYQAyADkAOQA1AGUAYgA3ADUAZgAzADIANwA0ADMANQBlADUAMwAuAGQA
bABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBo
AHQAIABAACAAIAAyADAAMgA1AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMA
AAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AMABi
AGUAZgBlADEANgAxAGEAYwBmAGYANABhADIAOQA5ADUAZQBiADcANQBmADMAMgA3ADQAMwA1AGUA
NQAzAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADAAYgBl
AGYAZQAxADYAMQBhAGMAZgBmADQAYQAyADkAOQA1AGUAYgA3ADUAZgAzADIANwA0ADMANQBlADUA
MwAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4
AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAmDIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_0befe161acff4a2995eb75f327435e53</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">1B</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Data Flow Task\WeekdayName.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\WeekdayName.Inputs[Input 0].Columns[ObservationTime]"
                      cachedDataType="dbTimeStamp"
                      cachedName="ObservationTime"
                      lineageId="Package\Data Flow Task\BuildDateRow.Outputs[WeatherOutput].Columns[ObservationTime]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\WeekdayName.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Data Flow Task\WeekdayName.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\WeekdayName.Outputs[Output 0].Columns[WeekdayName]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Data Flow Task\WeekdayName.Outputs[Output 0].Columns[WeekdayName]"
                      name="WeekdayName" />
                    <outputColumn
                      refId="Package\Data Flow Task\WeekdayName.Outputs[Output 0].Columns[MonthName]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Data Flow Task\WeekdayName.Outputs[Output 0].Columns[MonthName]"
                      name="MonthName" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Data Flow Task.Paths[Derived Column Output]"
              endId="Package\Data Flow Task\Lookup DimDate.Inputs[Lookup Input]"
              name="Derived Column Output"
              startId="Package\Data Flow Task\Create DateKey.Outputs[Derived Column Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Lookup No Match Output]"
              endId="Package\Data Flow Task\Insert Date.Inputs[OLE DB Command Input]"
              name="Lookup No Match Output"
              startId="Package\Data Flow Task\Lookup DimDate.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Output 0]"
              endId="Package\Data Flow Task\Create DateKey.Inputs[Derived Column Input]"
              name="Output 0"
              startId="Package\Data Flow Task\WeekdayName.Outputs[Output 0]" />
            <path
              refId="Package\Data Flow Task.Paths[WeatherOutput]"
              endId="Package\Data Flow Task\WeekdayName.Inputs[Input 0]"
              name="WeatherOutput"
              startId="Package\Data Flow Task\BuildDateRow.Outputs[WeatherOutput]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Script Task"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{6E3BC251-913F-4476-B3E8-0ED8312DE5A6}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_3983f9b18bb3466094abbb813a805eb6"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_3983f9b18bb3466094abbb813a805eb6")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_3983f9b18bb3466094abbb813a805eb6")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="packages.config"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="Newtonsoft.Json" version="9.0.1" targetFramework="net47" />
</packages>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Net;
using System.Text.Json;
using System.Text.Json.Nodes;
#endregion

namespace ST_3983f9b18bb3466094abbb813a805eb6
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            string apiKey = "462394b96065d405cd9ca7b3ef92d634"; // Replace with your OpenWeatherMap API key
            string city = "London"; // You can make this dynamic with an SSIS variable
            string url = $"https://api.openweathermap.org/data/2.5/weather?q={city}&appid={apiKey}&units=metric";

            try
            {
                // Make the API request
                HttpWebRequest request = (HttpWebRequest)WebRequest.Create(url);
                HttpWebResponse response = (HttpWebResponse)request.GetResponse();
                string json;

                using (StreamReader reader = new StreamReader(response.GetResponseStream()))
                {
                    json = reader.ReadToEnd();
                }


                JsonNode data = JsonNode.Parse(json);

                // Map to SSIS variables
                Variables vars = null;
                Dts.VariableDispenser.LockForWrite("User::CityName");
                Dts.VariableDispenser.LockForWrite("User::CountryCode");
                Dts.VariableDispenser.LockForWrite("User::Latitude");
                Dts.VariableDispenser.LockForWrite("User::Longitude");
                Dts.VariableDispenser.LockForWrite("User::Temperature");
                Dts.VariableDispenser.LockForWrite("User::MinTemperature");
                Dts.VariableDispenser.LockForWrite("User::MaxTemperature");
                Dts.VariableDispenser.LockForWrite("User::Humidity");
                Dts.VariableDispenser.LockForWrite("User::Pressure");
                Dts.VariableDispenser.LockForWrite("User::WindSpeed");
                Dts.VariableDispenser.LockForWrite("User::CloudCover");
                Dts.VariableDispenser.LockForWrite("User::MainCondition");
                Dts.VariableDispenser.LockForWrite("User::Description");
                Dts.VariableDispenser.LockForWrite("User::IconCode");
                Dts.VariableDispenser.LockForWrite("User::ObservationTime");
                Dts.VariableDispenser.GetVariables(ref vars);

                // Assign values
                vars["User::CityName"].Value = (string)data["name"];
                vars["User::CountryCode"].Value = (string)data["sys"]["country"];
                vars["User::Latitude"].Value = (double)data["coord"]["lat"];
                vars["User::Longitude"].Value = (double)data["coord"]["lon"];

                vars["User::Temperature"].Value = (double)data["main"]["temp"];
                vars["User::MinTemperature"].Value = (double)data["main"]["temp_min"];
                vars["User::MaxTemperature"].Value = (double)data["main"]["temp_max"];
                vars["User::Humidity"].Value = (int)data["main"]["humidity"];
                vars["User::Pressure"].Value = (int)data["main"]["pressure"];

                vars["User::WindSpeed"].Value = (double)data["wind"]["speed"];
                vars["User::CloudCover"].Value = (int)data["clouds"]["all"];

                vars["User::MainCondition"].Value = (string)data["weather"][0]["main"];
                vars["User::Description"].Value = (string)data["weather"][0]["description"];
                vars["User::IconCode"].Value = (string)data["weather"][0]["icon"];

                // Convert Unix timestamp to DateTime
                long unixTime = (long)data["dt"];
                DateTime obsTime = DateTimeOffset.FromUnixTimeSeconds(unixTime).UtcDateTime;
                vars["User::ObservationTime"].Value = obsTime;

                vars.Unlock();

                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                Dts.Events.FireError(0, "ScriptTask", ex.Message, "", 0);
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_3983f9b18bb3466094abbb813a805eb6.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{F954C370-4A74-40AE-844E-BDDEA0635D49}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_3983f9b18bb3466094abbb813a805eb6</RootNamespace>
    <AssemblyName>ST_3983f9b18bb3466094abbb813a805eb6</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Json.Net, Version=1.0.33.1, Culture=neutral, processorArchitecture=MSIL">
      <HintPath>C:\Users\Barna\AppData\Local\Temp\Vsta\SSIS_ST160\Vstaf__ZvKf__cRUOaX_3B2gEsnw\packages\Json.Net.1.0.33\lib\netstandard2.0\Json.Net.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.Bcl.AsyncInterfaces, Version=9.0.0.4, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL">
      <HintPath>C:\Users\Barna\AppData\Local\Temp\Vsta\SSIS_ST160\Vstaf__ZvKf__cRUOaX_3B2gEsnw\packages\Microsoft.Bcl.AsyncInterfaces.9.0.4\lib\net462\Microsoft.Bcl.AsyncInterfaces.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Buffers, Version=4.0.3.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL">
      <HintPath>C:\Users\Barna\AppData\Local\Temp\Vsta\SSIS_ST160\Vstaf__ZvKf__cRUOaX_3B2gEsnw\packages\System.Buffers.4.5.1\lib\net461\System.Buffers.dll</HintPath>
    </Reference>
    <Reference Include="System.Data" />
    <Reference Include="System.IO.Pipelines, Version=9.0.0.4, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL">
      <HintPath>C:\Users\Barna\AppData\Local\Temp\Vsta\SSIS_ST160\Vstaf__ZvKf__cRUOaX_3B2gEsnw\packages\System.IO.Pipelines.9.0.4\lib\net462\System.IO.Pipelines.dll</HintPath>
    </Reference>
    <Reference Include="System.Memory, Version=4.0.1.2, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL">
      <HintPath>C:\Users\Barna\AppData\Local\Temp\Vsta\SSIS_ST160\Vstaf__ZvKf__cRUOaX_3B2gEsnw\packages\System.Memory.4.5.5\lib\net461\System.Memory.dll</HintPath>
    </Reference>
    <Reference Include="System.Numerics" />
    <Reference Include="System.Numerics.Vectors, Version=4.1.4.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>C:\Users\Barna\AppData\Local\Temp\Vsta\SSIS_ST160\Vstaf__ZvKf__cRUOaX_3B2gEsnw\packages\System.Numerics.Vectors.4.5.0\lib\net46\System.Numerics.Vectors.dll</HintPath>
    </Reference>
    <Reference Include="System.Runtime.CompilerServices.Unsafe, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>C:\Users\Barna\AppData\Local\Temp\Vsta\SSIS_ST160\Vstaf__ZvKf__cRUOaX_3B2gEsnw\packages\System.Runtime.CompilerServices.Unsafe.6.0.0\lib\net461\System.Runtime.CompilerServices.Unsafe.dll</HintPath>
    </Reference>
    <Reference Include="System.Text.Encodings.Web, Version=9.0.0.4, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL">
      <HintPath>C:\Users\Barna\AppData\Local\Temp\Vsta\SSIS_ST160\Vstaf__ZvKf__cRUOaX_3B2gEsnw\packages\System.Text.Encodings.Web.9.0.4\lib\net462\System.Text.Encodings.Web.dll</HintPath>
    </Reference>
    <Reference Include="System.Text.Json, Version=9.0.0.4, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL">
      <HintPath>C:\Users\Barna\AppData\Local\Temp\Vsta\SSIS_ST160\Vstaf__ZvKf__cRUOaX_3B2gEsnw\packages\System.Text.Json.9.0.4\lib\net462\System.Text.Json.dll</HintPath>
    </Reference>
    <Reference Include="System.Threading.Tasks.Extensions, Version=4.2.0.1, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL">
      <HintPath>C:\Users\Barna\AppData\Local\Temp\Vsta\SSIS_ST160\Vstaf__ZvKf__cRUOaX_3B2gEsnw\packages\System.Threading.Tasks.Extensions.4.5.4\lib\net461\System.Threading.Tasks.Extensions.dll</HintPath>
    </Reference>
    <Reference Include="System.ValueTuple, Version=4.0.3.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL">
      <HintPath>C:\Users\Barna\AppData\Local\Temp\Vsta\SSIS_ST160\Vstaf__ZvKf__cRUOaX_3B2gEsnw\packages\System.ValueTuple.4.5.0\lib\net47\System.ValueTuple.dll</HintPath>
    </Reference>
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="app.config" />
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="app.config"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-9.0.0.0" newVersion="9.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_3983f9b18bb3466094abbb813a805eb6</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_3983f9b18bb3466094abbb813a805eb6</msb:DisplayName>
    <msb:ProjectId>{8DC7DE00-D1D4-4A7C-8D8C-8830D5C0B0E1}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_3983f9b18bb3466094abbb813a805eb6.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="packages.config" />
    <msb:File Include="app.config" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_3983f9b18bb3466094abbb813a805eb6.Properties.Settings.get_Default():ST_3983f9b18bb3466094abbb813a805eb6.Properties.Sett" +
    "ings")]

namespace ST_3983f9b18bb3466094abbb813a805eb6.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_3983f9b18bb3466094abbb813a805eb6.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_3983f9b18bb3466094abbb813a805eb6.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_3983f9b18bb3466094abbb813a805eb6.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_3983f9b18bb3466094abbb813a805eb6.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_3983f9b18bb3466094abbb813a805eb6.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{3DB3A3CD-7873-4200-B0BF-8BF974286281}"
      DTS:From="Package\Script Task"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Data Flow Task" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="155,42"
          Id="Package\Data Flow Task"
          TopLeft="252,297" />
        <NodeLayout
          Size="134,42"
          Id="Package\Script Task"
          TopLeft="258,189" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="327.25,231">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,66"
              Start="0,0"
              End="0,58.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,58.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Data Flow Task">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="161,42"
          Id="Package\Data Flow Task\Lookup DimDate"
          TopLeft="281,441" />
        <NodeLayout
          Size="157,42"
          Id="Package\Data Flow Task\Create DateKey"
          TopLeft="279,358" />
        <NodeLayout
          Size="133,42"
          Id="Package\Data Flow Task\Insert Date"
          TopLeft="385,565" />
        <NodeLayout
          Size="149,42"
          Id="Package\Data Flow Task\BuildDateRow"
          TopLeft="284,210" />
        <NodeLayout
          Size="154,42"
          Id="Package\Data Flow Task\WeekdayName"
          TopLeft="283,284" />
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[WeatherOutput]"
          TopLeft="359.25,252">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,32"
              Start="0,0"
              End="0,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,4.25,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Output 0]"
          TopLeft="358.75,326">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,32"
              Start="0,0"
              End="0,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,4.25,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Lookup No Match Output]"
          TopLeft="361.5,483">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="90,82"
              Start="0,0"
              End="90,74.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37" />
                  <mssgle:CubicBezierSegment
                    Point1="0,37"
                    Point2="0,41"
                    Point3="4,41" />
                  <mssgle:LineSegment
                    End="86,41" />
                  <mssgle:CubicBezierSegment
                    Point1="86,41"
                    Point2="90,41"
                    Point3="90,45" />
                  <mssgle:LineSegment
                    End="90,74.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-10.80638671875,46,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Derived Column Output]"
          TopLeft="359.5,400">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41"
              Start="0,0"
              End="0,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,8.75,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task\Lookup DimDate">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[DimDate]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>